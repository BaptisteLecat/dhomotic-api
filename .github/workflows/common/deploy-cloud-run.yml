name: Common Deploy Cloud Run
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      gcp_app_name:
        required: true
        type: string
      cloud_run_region:
        required: true
        type: string
      env_vars_string:
        required: true
        type: string
      cloud_run_service_account:
        required: true
        type: string

jobs:
  deploy:
    permissions:
      contents: read
      id-token: write
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ inputs.gcp_app_name }}
    env:
      IMAGE_NAME: europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ inputs.gcp_app_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker
        run: gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet

      - name: Use NPM to install dependencies
        uses: actions/setup-node@v1
        with:
          node-version: "20.x"
      - run: npm install

      - name: Build application
        run: npm run build

      - name: Build Docker image
        run: docker build -f Dockerfile -t ${{ env.IMAGE_NAME }}:${{ inputs.image_tag }} .

      - name: Push Docker image
        run: docker push ${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}

      - name: Deploy Docker image
        run: |
          gcloud run deploy ${{ inputs.gcp_app_name }}
          --image ${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}
          --region ${{ inputs.cloud_run_region }}
          --port 3000
          --set-env-vars ${{ inputs.env_vars_string }}
          --service-account=${{ inputs.cloud_run_service_account }}
