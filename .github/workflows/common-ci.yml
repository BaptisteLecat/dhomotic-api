name: (Common) Continuous Integration
on:
  workflow_call:
    inputs:
      gcp_project_id:
        required: true
        type: string
      gcp_app_name:
        required: true
        type: string

jobs:
  unit-tests:
    if: github.event_name != 'push' && github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ inputs.gcp_app_name }}
    steps:
      - uses: actions/checkout@v2

      - name: Use NPM to install dependencies
        uses: actions/setup-node@v1
        with:
          node-version: "20.x"
      - run: npm install

      - name: Build application
        run: npm run build

      - name: Run tests
        run: npm run test:unit
  e2e-tests:
    if: github.event_name != 'push' && github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ inputs.gcp_app_name }}
    env:
      NODE_ENV: development
      API_KEY: "api_key"
      PROJECT_ID: ${{ inputs.gcp_project_id }}
    steps:
      - uses: actions/checkout@v2

      - name: Use NPM to install dependencies
        uses: actions/setup-node@v1
        with:
          node-version: "20.x"
      - run: npm install

      - name: Build application
        run: npm run build

      - name: Setup Firebase emulator
        run: |
          curl -sL https://firebase.tools | bash

      - name: Run tests
        run: npm run test:e2e
  coverage:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ inputs.gcp_app_name }}
    env:
      NODE_ENV: development
      API_KEY: "api_key"
      PROJECT_ID: ${{ inputs.gcp_project_id }}
    steps:
      - uses: actions/checkout@v2

      - name: Use NPM to install dependencies
        uses: actions/setup-node@v1
        with:
          node-version: "20.x"
      - run: npm install

      - name: Build application
        run: npm run build

      - name: Setup Firebase emulator
        run: |
          curl -sL https://firebase.tools | bash

      - name: Run tests
        run: npm run test:cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          file: ./coverage/lcov.info
          fail_ci_if_error: true
